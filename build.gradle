buildscript {
    repositories {
        mavenCentral()
        mavenLocal()

        maven {
            name = "ForgeFS"
            url = "http://files.minecraftforge.net/maven"
        }

        maven {
            name = "sonatype"
            url = "https://oss.sonatype.org/content/repositories/snapshots/"
        }
    }

    dependencies {
        classpath 'net.minecraftforge.gradle:ForgeGradle:1.2-SNAPSHOT'
    }
}

repositories {
    mavenCentral()
    maven {
        name = "GGUtil-Maven"
        url = "http://gilded-games.com/maven/"
    }
}

// Load ForgeGradle
apply plugin: 'forge'
group = 'com.gildedgames.aether'

// Define config location.
ext.configFile = file "build.properties"

// Load the config.
configFile.withReader {
    def config = new Properties()
    config.load(it)
    project.ext.config = new ConfigSlurper().parse config
}

// Define dependencies this project depends on.
dependencies {
    compile "com.gildedgames.util:GildedGamesUtil:${config.ggutil_version}:dev"
}

task buildInfo {
    if (System.getenv().BUILD_NUMBER != null) {
        ext.buildNum = "build${System.getenv().BUILD_NUMBER}"
    } else {
        ext.buildNum = "git"
    }
}

ext.artifact_version = 'OOPS'

if (System.getenv().ARTIFACT_VERSION == null) {
    artifact_version = "${config.mod_version}.${project.buildInfo.buildNum}"
} else {
    artifact_version = "${system.getenv().ARTIFACT_VERSION}"
}

// Define artifact version.
version = "${config.minecraft_version}-${artifact_version}"

// Define ForgeGradle variables.
minecraft {
    version = config.minecraft_version + "-" + config.forge_version
    replace "${version}", project.version
    
    mappings = "${config.mappings}"

    runDir = "run"
}

/* Processes src/main/resources */
processResources {
    inputs.property "version", project.version
    inputs.property "mcversion", project.minecraft.version

    // replace stuff in mcmod.info, nothing else
    from (sourceSets.main.resources.srcDirs) {
        include 'mcmod.info'

        // replace version and mcversion
        expand 'version':project.version, 'mcversion':project.minecraft.version
    }

    // copy everything else, thats not the mcmod.info
    from (sourceSets.main.resources.srcDirs) {
        exclude 'mcmod.info'
    }
}
